name: Deploy to Vercel

on:
  push:
    branches:
      - main  # Triggers deployment when code is pushed to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Frontend Deployment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: ./acquired-beauty-app
        run: npm install

      - name: Build Frontend
        working-directory: ./acquired-beauty-app
        run: npm run dev

      - name: Deploy Frontend to Vercel
        working-directory: ./acquired-beauty-app
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx vercel --prod --token $VERCEL_TOKEN

      # Backend Deployment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Backend Dependencies
        working-directory: ./acquired-beauty-backend
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Deploy Backend
        working-directory: ./acquired-beauty-backend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # Create vercel.json if it doesn't exist
          if [ ! -f vercel.json ]; then
            echo '{
              "version": 2,
              "builds": [
                { "src": "server.py", "use": "@vercel/python" }
              ],
              "routes": [
                { "src": "/(.*)", "dest": "server.py" }
              ]
            }' > vercel.json
          fi
          npx vercel --prod --token $VERCEL_TOKEN